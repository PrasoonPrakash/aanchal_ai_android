# import pdb
# x = {'CAUSE_MENOPAUSE_CHEMO-INDUCED': 1, 'CAUSE_MENOPAUSE_HORMONAL TREATMENT': 0, 'CAUSE_MENOPAUSE_HYSTERECTOMY': 0, 'CAUSE_MENOPAUSE_NATURAL': 0, 'CAUSE_MENOPAUSE_NR': 0, 'PAST_SURGERY_NO': 1, 'PAST_SURGERY_NR': 0, 'PAST_SURGERY_YES': 0, 'STERILISATION (B/L TUBAL LIGATION)_NO': 1, 'STERILISATION (B/L TUBAL LIGATION)_YES': 0, 'NON-VEG_FREQUENCY_DAILY': 0, 'NON-VEG_FREQUENCY_FORTNIGHTLY': 0, 'NON-VEG_FREQUENCY_HALF YEARLY': 0, 'NON-VEG_FREQUENCY_MONTHLY': 1, 'NON-VEG_FREQUENCY_NR': 0, 'NON-VEG_FREQUENCY_QUARTERLY': 0, 'NON-VEG_FREQUENCY_THRICE WEEKLY': 0, 'NON-VEG_FREQUENCY_TWICE WEEKLY': 0, 'NON-VEG_FREQUENCY_WEEKLY': 0, 'NON-VEG_FREQUENCY_YEARLY': 0, 'EDUCATION_GRADUATE': 0, 'EDUCATION_ILLITERATE': 1, 'EDUCATION_INTERMEDIATE': 0, 'EDUCATION_NR': 0, 'EDUCATION_POST GRADUATE': 0, 'EDUCATION_PRIMARY': 0, 'EDUCATION_SECONDARY': 0, 'PHYSICAL ACTIVITY_GRADE_MILD': 1, 'PHYSICAL ACTIVITY_GRADE_MODERATE': 0, 'PHYSICAL ACTIVITY_GRADE_NIL': 0, 'PHYSICAL ACTIVITY_GRADE_NR': 0, 'PHYSICAL ACTIVITY_GRADE_VIGROUS': 0, 'RESIDENCE_NR': 0, 'RESIDENCE_RURAL': 0, 'RESIDENCE_URBAN': 1, 'SES_Lower': 0, 'SES_Lower Middle': 0, 'SES_Middle': 0, 'SES_Upper': 1, 'SES_Upper Middle': 0, 'WHO_BMI_CAT_0BESE CLASS I': 1, 'WHO_BMI_CAT_0VERWEIGHT': 0, 'WHO_BMI_CAT_NORMAL': 0, 'WHO_BMI_CAT_NR': 0, 'WHO_BMI_CAT_OBESE CLASS I': 0, 'WHO_BMI_CAT_OBESE CLASS II': 0, 'WHO_BMI_CAT_OBESE CLASS III': 0, 'WHO_BMI_CAT_OVERWEIGHT': 0, 'WHO_BMI_CAT_PRE OBESE': 0, 'WHO_BMI_CAT_UNDERWEIGHT': 0, 'ABD_OBESITY_#DIV/0!': 0, 'ABD_OBESITY_#VALUE!': 0, 'ABD_OBESITY_NO': 0, 'ABD_OBESITY_YES': 1, 'WEIGHT (IN KGS)': 70.0, 'HEIGHT (IN CMS)': 156.0, 'RBS': 105.0, 'WHR': 0.8, 'SBP': 99.0, 'WAIST_CMS': 155.0, 'BMI': 28.76}

# catgeorical_cols = ['CAUSE_MENOPAUSE_CHEMO-INDUCED', 'CAUSE_MENOPAUSE_HORMONAL TREATMENT', 'CAUSE_MENOPAUSE_HYSTERECTOMY', 'CAUSE_MENOPAUSE_NATURAL', 'CAUSE_MENOPAUSE_NR', 'PAST_SURGERY_NO', 'PAST_SURGERY_NR', 'PAST_SURGERY_YES', 'STERILISATION (B/L TUBAL LIGATION)_NO', 'STERILISATION (B/L TUBAL LIGATION)_YES', 'NON-VEG_FREQUENCY_DAILY', 'NON-VEG_FREQUENCY_FORTNIGHTLY', 'NON-VEG_FREQUENCY_HALF YEARLY', 'NON-VEG_FREQUENCY_MONTHLY', 'NON-VEG_FREQUENCY_NR', 'NON-VEG_FREQUENCY_QUARTERLY', 'NON-VEG_FREQUENCY_THRICE WEEKLY', 'NON-VEG_FREQUENCY_TWICE WEEKLY', 'NON-VEG_FREQUENCY_WEEKLY', 'NON-VEG_FREQUENCY_YEARLY', 'EDUCATION_GRADUATE', 'EDUCATION_ILLITERATE', 'EDUCATION_INTERMEDIATE', 'EDUCATION_NR', 'EDUCATION_POST GRADUATE', 'EDUCATION_PRIMARY', 'EDUCATION_SECONDARY', 'PHYSICAL ACTIVITY_GRADE_MILD', 'PHYSICAL ACTIVITY_GRADE_MODERATE', 'PHYSICAL ACTIVITY_GRADE_NIL', 'PHYSICAL ACTIVITY_GRADE_NR', 'PHYSICAL ACTIVITY_GRADE_VIGROUS', 'RESIDENCE_NR', 'RESIDENCE_RURAL', 'RESIDENCE_URBAN', 'SES_Lower', 'SES_Lower Middle', 'SES_Middle', 'SES_Upper', 'SES_Upper Middle', 'WHO_BMI_CAT_0BESE CLASS I', 'WHO_BMI_CAT_0VERWEIGHT', 'WHO_BMI_CAT_NORMAL', 'WHO_BMI_CAT_NR', 'WHO_BMI_CAT_OBESE CLASS I', 'WHO_BMI_CAT_OBESE CLASS II', 'WHO_BMI_CAT_OBESE CLASS III', 'WHO_BMI_CAT_OVERWEIGHT', 'WHO_BMI_CAT_PRE OBESE', 'WHO_BMI_CAT_UNDERWEIGHT', 'ABD_OBESITY_#DIV/0!', 'ABD_OBESITY_#VALUE!', 'ABD_OBESITY_NO', 'ABD_OBESITY_YES']

# def csv_format(input_data):
#     write_dict = {}
#     fields = ["CAUSE_MENOPAUSE", "PAST_SURGERY", "WEIGHT (IN KGS)", "HEIGHT (IN CMS)", "STERILISATION (B/L TUBAL LIGATION)", "NON-VEG_FREQUENCY", 
#     "EDUCATION", "PHYSICAL ACTIVITY_GRADE", "RBS", "WHR", 'RESIDENCE', 'SES', 'SBP', 'WHO_BMI_CAT', 'WAIST_CMS', 'ABD_OBESITY', 'BMI']
#     for key in input_data:
#         val_ = input_data[key]
#         for field in fields:
#             if field in key:
#                 if key in catgeorical_cols:
#                     if val_ == 1:
#                         write_dict[field] = key.split(field+"_")[-1].lstrip()
#                 else:
#                     write_dict[key] = val_
#     return write_dict

# y = csv_format(x)

import re

catgeorical_cols = ['CAUSE_MENOPAUSE_CHEMO-INDUCED', 'CAUSE_MENOPAUSE_HORMONAL TREATMENT', 'CAUSE_MENOPAUSE_HYSTERECTOMY', 'CAUSE_MENOPAUSE_NATURAL', 'CAUSE_MENOPAUSE_NR', 'PAST_SURGERY_NO', 'PAST_SURGERY_NR', 'PAST_SURGERY_YES', 'STERILISATION (B/L TUBAL LIGATION)_NO', 'STERILISATION (B/L TUBAL LIGATION)_YES', 'NON-VEG_FREQUENCY_DAILY', 'NON-VEG_FREQUENCY_FORTNIGHTLY', 'NON-VEG_FREQUENCY_HALF YEARLY', 'NON-VEG_FREQUENCY_MONTHLY', 'NON-VEG_FREQUENCY_NR', 'NON-VEG_FREQUENCY_QUARTERLY', 'NON-VEG_FREQUENCY_THRICE WEEKLY', 'NON-VEG_FREQUENCY_TWICE WEEKLY', 'NON-VEG_FREQUENCY_WEEKLY', 'NON-VEG_FREQUENCY_YEARLY', 'EDUCATION_GRADUATE', 'EDUCATION_ILLITERATE', 'EDUCATION_INTERMEDIATE', 'EDUCATION_NR', 'EDUCATION_POST GRADUATE', 'EDUCATION_PRIMARY', 'EDUCATION_SECONDARY', 'PHYSICAL ACTIVITY_GRADE_MILD', 'PHYSICAL ACTIVITY_GRADE_MODERATE', 'PHYSICAL ACTIVITY_GRADE_NIL', 'PHYSICAL ACTIVITY_GRADE_NR', 'PHYSICAL ACTIVITY_GRADE_VIGROUS', 'RESIDENCE_NR', 'RESIDENCE_RURAL', 'RESIDENCE_URBAN', 'SES_Lower', 'SES_Lower Middle', 'SES_Middle', 'SES_Upper', 'SES_Upper Middle', 'WHO_BMI_CAT_0BESE CLASS I', 'WHO_BMI_CAT_0VERWEIGHT', 'WHO_BMI_CAT_NORMAL', 'WHO_BMI_CAT_NR', 'WHO_BMI_CAT_OBESE CLASS I', 'WHO_BMI_CAT_OBESE CLASS II', 'WHO_BMI_CAT_OBESE CLASS III', 'WHO_BMI_CAT_OVERWEIGHT', 'WHO_BMI_CAT_PRE OBESE', 'WHO_BMI_CAT_UNDERWEIGHT', 'ABD_OBESITY_#DIV/0!', 'ABD_OBESITY_#VALUE!', 'ABD_OBESITY_NO', 'ABD_OBESITY_YES']

all_cols = {'CAUSE_MENOPAUSE_CHEMO-INDUCED': 0, 'CAUSE_MENOPAUSE_HORMONAL TREATMENT': 1, 'CAUSE_MENOPAUSE_HYSTERECTOMY': 0, 'CAUSE_MENOPAUSE_NATURAL': 0, 'CAUSE_MENOPAUSE_NR': 0, 'PAST_SURGERY_NO': 0, 'PAST_SURGERY_NR': 0, 'PAST_SURGERY_YES': 1, 'STERILISATION (B/L TUBAL LIGATION)_NO': 0, 'STERILISATION (B/L TUBAL LIGATION)_YES': 1, 'NON-VEG_FREQUENCY_DAILY': 1, 'NON-VEG_FREQUENCY_FORTNIGHTLY': 0, 'NON-VEG_FREQUENCY_HALF YEARLY': 0, 'NON-VEG_FREQUENCY_MONTHLY': 0, 'NON-VEG_FREQUENCY_NR': 0, 'NON-VEG_FREQUENCY_QUARTERLY': 0, 'NON-VEG_FREQUENCY_THRICE WEEKLY': 0, 'NON-VEG_FREQUENCY_TWICE WEEKLY': 0, 'NON-VEG_FREQUENCY_WEEKLY': 0, 'NON-VEG_FREQUENCY_YEARLY': 0, 'EDUCATION_GRADUATE': 0, 'EDUCATION_ILLITERATE': 0, 'EDUCATION_INTERMEDIATE': 1, 'EDUCATION_NR': 0, 'EDUCATION_POST GRADUATE': 0, 'EDUCATION_PRIMARY': 0, 'EDUCATION_SECONDARY': 0, 'PHYSICAL ACTIVITY_GRADE_MILD': 0, 'PHYSICAL ACTIVITY_GRADE_MODERATE': 0, 'PHYSICAL ACTIVITY_GRADE_NIL': 0, 'PHYSICAL ACTIVITY_GRADE_NR': 1, 'PHYSICAL ACTIVITY_GRADE_VIGROUS': 0, 'RESIDENCE_NR': 0, 'RESIDENCE_RURAL': 1, 'RESIDENCE_URBAN': 0, 'SES_Lower': 1, 'SES_Lower Middle': 0, 'SES_Middle': 0, 'SES_Upper': 0, 'SES_Upper Middle': 0, 'WHO_BMI_CAT_0BESE CLASS I': 0, 'WHO_BMI_CAT_0VERWEIGHT': 0, 'WHO_BMI_CAT_NORMAL': 1, 'WHO_BMI_CAT_NR': 0, 'WHO_BMI_CAT_OBESE CLASS I': 0, 'WHO_BMI_CAT_OBESE CLASS II': 0, 'WHO_BMI_CAT_OBESE CLASS III': 0, 'WHO_BMI_CAT_OVERWEIGHT': 0, 'WHO_BMI_CAT_PRE OBESE': 0, 'WHO_BMI_CAT_UNDERWEIGHT': 0, 'ABD_OBESITY_#DIV/0!': 0, 'ABD_OBESITY_#VALUE!': 1, 'ABD_OBESITY_NO': 0, 'ABD_OBESITY_YES': 0, 'WEIGHT (IN KGS)': 60.0, 'HEIGHT (IN CMS)': 160.0, 'RBS': 100.0, 'WHR': 1.0, 'SBP': 100.0, 'WAIST_CMS': 90.0, 'BMI': 23.44}

def one_hot(input_data):
    from collections import OrderedDict
    #write_dict = OrderedDict()
    write_dict = {}
    keys_list = []
    for it in all_cols:
        write_dict[it] = 0
        keys_list.append(it)
    for key, val in input_data.items():
        for it in keys_list:
            if key in it:
                if key == "WHO_BMI_CAT":
                    pass
                    #pdb.set_trace()
                if it in catgeorical_cols:
                    if it == key+"_"+str(val):
                        write_dict[it] = 1
                        if key == "WHO_BMI_CAT":
                            print(write_dict)
                    # else:
                    #     write_dict[it] = 0
                    #     if key == "WHO_BMI_CAT":
                    #         pdb.set_trace()
                else:
                    #pdb.set_trace()
                    val_str = str(val).replace(' ', '')
                    cleaned_string = val_str.strip('{}').split(':')[1]
                    # Convert the cleaned string to float
                    result = float(cleaned_string)
                    write_dict[key] = result
    return write_dict



"""write_dict = one_hot(y)

import csv
csv_file = "field.csv"

with open(csv_file, 'w', newline='') as file:
    writer = csv.writer(file)
    # Write the headers (keys of the OrderedDict)
    writer.writerow(write_dict.keys())
    # Write the values
    writer.writerow(write_dict.values())"""

# pdb.set_trace()
